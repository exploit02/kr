{"ast":null,"code":"var _jsxFileName = \"E:\\\\krishi\\\\app\\\\src\\\\components\\\\operations\\\\masters\\\\state\\\\addUpdateState.js\";\nimport React, { Component } from 'react';\nimport Sidebar from '../../../navbar/SideBar';\nimport TopNav from '../../../navbar/Topnav';\nimport { stateModule } from '../../../../services/stateService';\nimport { Notification } from '../../../../utils/Notification';\nimport Validator from '../../../../utils/Validator';\nimport CountryDropDown from './../../../dropDown/countryDropDown';\nimport { countryModule } from './../../../../services/countryService';\nimport { MaterializeCSS } from './../../../../utils/Util';\n\nclass AddState extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryList: [{\n        id: \"1041\",\n        country_name: \"India\",\n        status: \"Active\"\n      }, {\n        id: \"1038\",\n        country_name: \"Brazil\",\n        status: \"Active\"\n      }],\n      id: \"\",\n      state_name: \"\",\n      country_id: \"\",\n      state_code: \"\",\n      status: \"\"\n    };\n    this.notificationDOMRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.stateCreate = this.stateCreate.bind(this);\n    this.stateUpdate = this.stateUpdate.bind(this);\n  } // async componentWillMount(){\n  //    if(this.props.location.state.Id){\n  //     const stateData = await stateModule.getState(this.props.location.state.Id)\n  //     console.log(stateData)\n  //     this.setState({\n  //         id: stateData[0].id ,\n  //         state_name: stateData[0].state_name ,\n  //         country_id:stateData[0].country_id,\n  //         state_code:stateData[0].state_code,\n  //         status: stateData[0].status\n  //     })\n  //    }\n  // }\n\n\n  async componentWillMount() {\n    //MaterializeCSS.AutoInit()\n    //     var elems = document.querySelectorAll('select');\n    //     var instances = MaterializeCSS.FormSelect.getInstance(elems);\n    //    console.log('here')\n    //    console.log(instances)\n    const countryList = await countryModule.getCountry();\n    console.log(countryList);\n    this.setState({\n      countryList: countryList\n    });\n  }\n\n  componentDidMount() {\n    // document.addEventListener('DOMContentLoaded', function() {\n    //     var elems = document.querySelectorAll('select');\n    //     var instances = MaterializeCSS.FormSelect.getInstance(elems);\n    //    console.log('here')\n    //    console.log(instances)\n    //   });\n    document.addEventListener('DOMContentLoaded', function () {\n      var elems = document.querySelectorAll('.datepicker');\n      console.log('rrrrrrrrrrrrr');\n      console.log(elems); // var instances = M.Datepicker.init(elems, {\n      //     onClose:  () => {\n      //         thisObj.setState({doj:thisObj.refs.doj.value, dob:thisObj.refs.dob.value})\n      //       },\n      //     autoClose: true,\n      //     showClearBtn:true\n      // });\n    });\n  }\n\n  async stateCreate(event) {\n    event.preventDefault();\n\n    if (this.state.state_name, this.state.country_id, this.state.state_code) {\n      const res = await stateModule.addState(this.state);\n      this.setState({\n        id: \"\",\n        state_name: \"\",\n        country_id: \"\",\n        state_code: \"\",\n        status: \"\"\n      });\n      this.props.history.push(\"/operations/state\");\n      Notification('Success', \"State Added Successfully \");\n    }\n  }\n\n  async stateUpdate(event) {\n    event.preventDefault();\n\n    if (this.state.state_name, this.state.country_id, this.state.state_code) {\n      const res = await stateModule.updateState(this.state);\n      this.setState({\n        id: \"\",\n        state_name: \"\",\n        country_id: \"\",\n        state_code: \"\",\n        status: \"\"\n      });\n      this.props.history.push({\n        pathname: \"/operations/state\",\n        state: {\n          Notification: true,\n          Type: 'Success',\n          Message: 'State Updated Successfully'\n        }\n      });\n      Notification('Info', \"State Updated Successfully \");\n    }\n  }\n\n  handleChange() {\n    this.setState({\n      state_name: this.refs.state_name.value,\n      country_id: this.refs.country_id.value,\n      state_code: this.refs.state_code.value\n    });\n  }\n\n  render() {\n    // const countryList = this.state.country\n    // //console.log(countryList)\n    // if(!Object.keys(countryList).length){\n    //     return (\n    //         <div>\n    //             {/* <ReactNotification ref={this.notificationDOMRef} />\n    //             <TopNav/>\n    //             <SideBar userType={1}/> */}\n    //         </div>\n    //     );\n    // }\n    console.log('hhhhhhhhhhhhh');\n    console.log(this.state.countryList);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(TopNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s9 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, !this.props.location.state.Id ? React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Add State\") : React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Update State\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s4 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"form_state_name\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.state_name,\n      onChange: this.handleChange,\n      ref: \"state_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"form_state_name\",\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"State Name\")), React.createElement(\"div\", {\n      className: \"input-field col s4 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"form_country_id\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.country_id,\n      onChange: this.handleChange,\n      ref: \"country_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"form_country_id\",\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Country Name\")), React.createElement(\"div\", {\n      className: \"input-field col s4 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"form_state_code\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.state_code,\n      onChange: this.handleChange,\n      ref: \"state_code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"form_state_code\",\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"State Code\"), React.createElement(\"div\", {\n      className: \"input-field col s4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, Object.keys(this.state.countryList).length !== 0 ? this.state.countryList.map((countryList, index) => {\n      return React.createElement(\"select\", {\n        name: \"gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: countryList.id,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, countryList.country_name));\n    }) : null))), React.createElement(\"div\", {\n      className: \"row col s6 offset-s1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, !this.props.location.state.Id ? React.createElement(\"button\", {\n      className: \"btn btn-info btn-block btn-sm\",\n      type: \"submit\",\n      onClick: this.stateCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Submit\") : React.createElement(\"button\", {\n      className: \"btn btn-info btn-block btn-sm\",\n      type: \"submit\",\n      onClick: this.stateUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Update\"))))));\n  }\n\n}\n\nexport default AddState;","map":{"version":3,"sources":["E:\\krishi\\app\\src\\components\\operations\\masters\\state\\addUpdateState.js"],"names":["React","Component","Sidebar","TopNav","stateModule","Notification","Validator","CountryDropDown","countryModule","MaterializeCSS","AddState","constructor","props","state","countryList","id","country_name","status","state_name","country_id","state_code","notificationDOMRef","createRef","handleChange","bind","stateCreate","stateUpdate","componentWillMount","getCountry","console","log","setState","componentDidMount","document","addEventListener","elems","querySelectorAll","event","preventDefault","res","addState","history","push","updateState","pathname","Type","Message","refs","value","render","location","Id","Object","keys","length","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Sidebar from '../../../navbar/SideBar';\r\nimport TopNav from '../../../navbar/Topnav';\r\nimport {stateModule } from '../../../../services/stateService'\r\nimport {Notification} from '../../../../utils/Notification'\r\nimport Validator from '../../../../utils/Validator';\r\nimport CountryDropDown from './../../../dropDown/countryDropDown'\r\nimport { countryModule } from './../../../../services/countryService'\r\nimport { MaterializeCSS } from './../../../../utils/Util'\r\n\r\n\r\n class AddState extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            countryList:[{id: \"1041\", country_name: \"India\", status: \"Active\"},{id: \"1038\", country_name: \"Brazil\", status: \"Active\"}],\r\n            id: \"\",\r\n            state_name:\"\",\r\n            country_id:\"\",\r\n            state_code:\"\",\r\n            status:\"\"\r\n        }\r\n        this.notificationDOMRef =  React.createRef();\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.stateCreate = this.stateCreate.bind(this)\r\n        this.stateUpdate = this.stateUpdate.bind(this)\r\n    }\r\n\r\n    // async componentWillMount(){\r\n    //    if(this.props.location.state.Id){\r\n    //     const stateData = await stateModule.getState(this.props.location.state.Id)\r\n    //     console.log(stateData)\r\n    //     this.setState({\r\n    //         id: stateData[0].id ,\r\n    //         state_name: stateData[0].state_name ,\r\n    //         country_id:stateData[0].country_id,\r\n    //         state_code:stateData[0].state_code,\r\n    //         status: stateData[0].status\r\n    //     })\r\n    //    }\r\n    // }\r\n\r\n    async componentWillMount(){\r\n        //MaterializeCSS.AutoInit()\r\n        //     var elems = document.querySelectorAll('select');\r\n        //     var instances = MaterializeCSS.FormSelect.getInstance(elems);\r\n        //    console.log('here')\r\n        //    console.log(instances)\r\n        const countryList = await countryModule.getCountry()\r\n        console.log(countryList)\r\n        this.setState({countryList:countryList})\r\n    }\r\n\r\n    componentDidMount(){\r\n        // document.addEventListener('DOMContentLoaded', function() {\r\n        //     var elems = document.querySelectorAll('select');\r\n        //     var instances = MaterializeCSS.FormSelect.getInstance(elems);\r\n        //    console.log('here')\r\n        //    console.log(instances)\r\n        //   });\r\n\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            var elems = document.querySelectorAll('.datepicker');\r\n            console.log('rrrrrrrrrrrrr')\r\n            console.log(elems)\r\n            // var instances = M.Datepicker.init(elems, {\r\n\r\n            //     onClose:  () => {\r\n            //         thisObj.setState({doj:thisObj.refs.doj.value, dob:thisObj.refs.dob.value})\r\n            //       },\r\n            //     autoClose: true,\r\n            //     showClearBtn:true\r\n            // });\r\n            \r\n          });\r\n    }\r\n\r\n    async stateCreate(event){\r\n        event.preventDefault();\r\n        if(this.state.state_name, this.state.country_id, this.state.state_code){\r\n            const res = await stateModule.addState(this.state)\r\n             this.setState({\r\n                id:\"\",\r\n                state_name:\"\", \r\n                country_id:\"\",\r\n                state_code:\"\",\r\n                status:\"\"\r\n               });\r\n               this.props.history.push(\"/operations/state\");\r\n               Notification('Success',\"State Added Successfully \")\r\n        }\r\n    }\r\n\r\n    async stateUpdate(event){\r\n        event.preventDefault();\r\n        if(this.state.state_name, this.state.country_id, this.state.state_code){\r\n        const res = await stateModule.updateState(this.state)\r\n        this.setState({\r\n            id:\"\",\r\n            state_name:\"\", \r\n            country_id:\"\",\r\n            state_code:\"\",\r\n            status:\"\"\r\n           });\r\n           this.props.history.push({\r\n               pathname: \"/operations/state\",\r\n               state:{\r\n                Notification:true,\r\n                Type:'Success',\r\n                Message: 'State Updated Successfully'\r\n             }\r\n        });\r\n        Notification('Info',\"State Updated Successfully \")\r\n       }\r\n    }\r\n\r\n    handleChange(){\r\n        this.setState({\r\n            state_name: this.refs.state_name.value,\r\n            country_id: this.refs.country_id.value,\r\n            state_code: this.refs.state_code.value\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // const countryList = this.state.country\r\n        // //console.log(countryList)\r\n        // if(!Object.keys(countryList).length){\r\n        //     return (\r\n        //         <div>\r\n        //             {/* <ReactNotification ref={this.notificationDOMRef} />\r\n        //             <TopNav/>\r\n        //             <SideBar userType={1}/> */}\r\n        //         </div>\r\n        //     );\r\n        // }\r\n        console.log('hhhhhhhhhhhhh')\r\n        console.log(this.state.countryList)\r\n        \r\n        return (\r\n           \r\n            <div>\r\n              <TopNav/>\r\n              <Sidebar/>\r\n              <div className =\"row\">\r\n                  <div className=\"col s9 offset-s3\">\r\n                      {\r\n                          !this.props.location.state.Id ? \r\n                          <h5>Add State</h5> :\r\n                          <h5>Update State</h5>\r\n                      }\r\n                    <br/><br/><br/>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s4 offset-s3\">\r\n                            <input id=\"form_state_name\" type=\"text\" className=\"validate\" value={this.state.state_name} onChange={this.handleChange} ref=\"state_name\"/>\r\n                            <label htmlFor=\"form_state_name\" className=\"active\">State Name</label>\r\n                            </div>\r\n                            <div className=\"input-field col s4 offset-s3\">\r\n                            <input id=\"form_country_id\" type=\"text\" className=\"validate\" value={this.state.country_id} onChange={this.handleChange} ref=\"country_id\"/>\r\n                            <label htmlFor=\"form_country_id\" className=\"active\">Country Name</label>\r\n                            </div>\r\n                            <div className=\"input-field col s4 offset-s3\">\r\n                            <input id=\"form_state_code\" type=\"text\" className=\"validate\" value={this.state.state_code} onChange={this.handleChange} ref=\"state_code\"/>\r\n                            <label htmlFor=\"form_state_code\" className=\"active\">State Code</label>\r\n                            <div className=\"input-field col s4\">\r\n                                   \r\n                            {\r\n                                (Object.keys(this.state.countryList).length) !== 0 ?\r\n                                    this.state.countryList.map((countryList , index) => {\r\n                                        return (\r\n                                            <select name=\"gender\" >\r\n                                            <option value={countryList.id} key={index} >{countryList.country_name}</option>\r\n                                            </select>\r\n                                        )\r\n                                    })\r\n                                :\r\n                                null\r\n                                \r\n                            }\r\n                            \r\n                            </div>\r\n\r\n\r\n                            </div>\r\n                            </div>\r\n                        \r\n                        <div className=\"row col s6 offset-s1\">\r\n                                {\r\n                            !this.props.location.state.Id ?\r\n                            <button className=\"btn btn-info btn-block btn-sm\" type=\"submit\" onClick={this.stateCreate}>Submit</button> :\r\n                            <button className=\"btn btn-info btn-block btn-sm\" type=\"submit\" onClick={this.stateUpdate}>Update</button>\r\n                             }\r\n                    </div>\r\n                    </form>\r\n                  </div>\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddState"]},"metadata":{},"sourceType":"module"}