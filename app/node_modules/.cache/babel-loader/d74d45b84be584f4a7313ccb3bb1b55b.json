{"ast":null,"code":"var _jsxFileName = \"E:\\\\krishi\\\\app\\\\src\\\\utils\\\\table.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport const Table = ({\n  THead,\n  TBody,\n  ActionButton\n}) => {\n  // console.log(THead, TBody)\n  // console.log(ActionButton)\n  // Object.keys(ActionButton).map(function(key) {\n  //     console.log(ActionButton[key])\n  // });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"z-depth-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"responsive-table centered bordered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, THead.map((THcontent, index) => {\n    return React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, THcontent);\n  }), ActionButton.Display == true ? React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Action\") : null)), TBody.map((TBodyData, index) => {\n    var Column = Object.keys(TBodyData).map(function (key) {\n      return TBodyData[key];\n    });\n    var hi = Object.keys(ActionButton).map(function (key, i) {\n      // use keyName to get current key's name\n      // and a[keyName] to get its value\n      // console.log(keyName),\n      // console.log(keyIndex)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/operations/country/update\",\n          state: {\n            countryId: Column[0]\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"edit\")), React.createElement(\"i\", {\n        className: \"material-icons small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"more_vert\"));\n    });\n    console.log(hi);\n    return React.createElement(\"tbody\", {\n      key: Column[0],\n      className: Column[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, Column[1]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, Column[2]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: \"/operations/country/update\",\n        state: {\n          countryId: Column[0]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"edit\")), React.createElement(\"i\", {\n      className: \"material-icons small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"more_vert\"), Column[2] == 'Active' ? React.createElement(\"i\", {\n      className: \"material-icons\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => this.countryDelete(Column[0]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"check_circle\") : React.createElement(\"i\", {\n      className: \"material-icons\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => this.countryDelete(Column[0]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"block\"), ActionButton.Edit.Show ? React.createElement(Link, {\n      to: {\n        pathname: ActionButton.Edit.Link,\n        state: {\n          countryId: Column[0]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, ActionButton.Edit.Icon)) : null, ActionButton.Edit.Show && ActionButton.Edit.Separator ? React.createElement(\"i\", {\n      className: \"material-icons small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"more_vert\") : null)));\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["E:\\krishi\\app\\src\\utils\\table.js"],"names":["React","Link","Table","THead","TBody","ActionButton","map","THcontent","index","Display","TBodyData","Column","Object","keys","key","hi","i","pathname","state","countryId","console","log","cursor","countryDelete","Edit","Show","Icon","Separator"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const Table = ({THead, TBody, ActionButton})=>{\r\n    // console.log(THead, TBody)\r\n    // console.log(ActionButton)\r\n    // Object.keys(ActionButton).map(function(key) {\r\n    //     console.log(ActionButton[key])\r\n    // });\r\n    return(\r\n        <div>\r\n            <div className=\"z-depth-4\">\r\n            <table className=\"responsive-table centered bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        {\r\n                                            THead.map((THcontent , index) => {\r\n                                                return(\r\n                                                    <th>{THcontent}</th>\r\n                                                )\r\n                                            })\r\n\r\n                                        }\r\n                                        {\r\n                                            ActionButton.Display == true ? <th>Action</th>:null\r\n                                        }\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                    {\r\n                                        \r\n                                        TBody.map((TBodyData , index) => {\r\n                                            var Column = Object.keys(TBodyData).map(function(key) {\r\n                                                return TBodyData[key];\r\n                                              });\r\n                                              var hi = Object.keys(ActionButton).map(function(key, i) {\r\n                                                // use keyName to get current key's name\r\n                                                // and a[keyName] to get its value\r\n                                                // console.log(keyName),\r\n                                                // console.log(keyIndex)\r\n                                                return (\r\n                                                    <div>\r\n                                                        <Link \r\n                                                        to={{pathname :`/operations/country/update`,\r\n                                                        state: {countryId:Column[0]}\r\n                                                            }}><i className=\"material-icons\">edit</i>\r\n                                                        </Link>\r\n                                                        <i className=\"material-icons small\">more_vert</i>\r\n                                                    </div>\r\n                                                    \r\n\r\n                                                )\r\n                                              })\r\n                                              console.log(hi)\r\n                                            return (\r\n                                                <tbody key = {Column[0]} className = {Column[0]}>\r\n                                                <tr >\r\n                                                    <td>{Column[1]}</td>\r\n                                                    <td>{Column[2]}</td>\r\n                                                    \r\n                                                    <td>\r\n                                                        <Link \r\n                                                        to={{pathname :`/operations/country/update`,\r\n                                                        state: {countryId:Column[0]}\r\n                                                            }}><i className=\"material-icons\">edit</i>\r\n                                                        </Link>\r\n                                                        <i className=\"material-icons small\">more_vert</i>\r\n                                                        \r\n                                                        {\r\n                                                            Column[2] == 'Active'?\r\n                                                            <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={()=>this.countryDelete(Column[0])}>check_circle</i>:\r\n                                                            <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={()=>this.countryDelete(Column[0])}>block</i>\r\n                                                        }\r\n\r\n                                                        {\r\n                                                            ActionButton.Edit.Show ?\r\n                                                            <Link \r\n                                                                to={{pathname :ActionButton.Edit.Link, state: {countryId:Column[0]} }}>\r\n                                                                <i className=\"material-icons\">{ActionButton.Edit.Icon}</i>\r\n                                                            </Link>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                        {\r\n                                                          ActionButton.Edit.Show && ActionButton.Edit.Separator ?\r\n                                                          <i className=\"material-icons small\">more_vert</i>\r\n                                                          :\r\n                                                          null  \r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                                );\r\n                                            \r\n                                        })\r\n                                    }\r\n                                </table>\r\n            </div>\r\n        <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}