{"ast":null,"code":"var _jsxFileName = \"E:\\\\krishi\\\\app\\\\src\\\\utils\\\\table.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport const Table = ({\n  THead,\n  TBody,\n  ActionButton\n}) => {\n  // console.log(THead, TBody)\n  // console.log(ActionButton)\n  // let ActionJSX = ''\n  // Object.keys(ActionButton).map(function(key) {\n  //     const ButtonProperty = {...ActionButton[key]}\n  //     console.log(ButtonProperty)\n  //     if(ButtonProperty.Show){\n  //         ActionJSX += <th>GHHH</th>\n  //     }\n  // });\n  // console.log(ActionJSX)\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"z-depth-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"responsive-table centered bordered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, THead.map((THcontent, index) => {\n    return React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, THcontent);\n  }))), TBody.map((TBodyData, index) => {\n    var Column = Object.keys(TBodyData).map(function (key) {\n      return TBodyData[key];\n    }); //   var hi = Object.keys(ActionButton).map(function(key, i) {\n    //     // use keyName to get current key's name\n    //     // and a[keyName] to get its value\n    //     // console.log(keyName),\n    //     // console.log(keyIndex)\n    //     return (\n    //         <div>\n    //             <Link \n    //             to={{pathname :`/operations/country/update`,\n    //             state: {countryId:Column[0]}\n    //                 }}><i className=\"material-icons\">edit</i>\n    //             </Link>\n    //             <i className=\"material-icons small\">more_vert</i>\n    //         </div>\n    //     )\n    //   })\n    //   console.log(hi)\n\n    return React.createElement(\"tbody\", {\n      key: Column[0],\n      className: Column[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, Column[1]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, Column[2]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: \"/operations/country/update\",\n        state: {\n          countryId: Column[0]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"edit\")), React.createElement(\"i\", {\n      className: \"material-icons small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"more_vert\"), Column[2] == 'Active' ? React.createElement(\"i\", {\n      className: \"material-icons\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => this.countryDelete(Column[0]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"check_circle\") : React.createElement(\"i\", {\n      className: \"material-icons\",\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => this.countryDelete(Column[0]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"block\")), ActionButton.map((TBodyData, index) => {\n      return (//'opop'\n        React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"/operations/country/update\",\n            state: {\n              countryId: Column[0]\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \" \"), React.createElement(\"i\", {\n          className: \"material-icons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"edit\"))\n      );\n    })));\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["E:\\krishi\\app\\src\\utils\\table.js"],"names":["React","Link","Table","THead","TBody","ActionButton","map","THcontent","index","TBodyData","Column","Object","keys","key","pathname","state","countryId","cursor","countryDelete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const Table = ({THead, TBody, ActionButton})=>{\r\n    // console.log(THead, TBody)\r\n    // console.log(ActionButton)\r\n    // let ActionJSX = ''\r\n    // Object.keys(ActionButton).map(function(key) {\r\n    //     const ButtonProperty = {...ActionButton[key]}\r\n    //     console.log(ButtonProperty)\r\n    //     if(ButtonProperty.Show){\r\n    //         ActionJSX += <th>GHHH</th>\r\n    //     }\r\n        \r\n    // });\r\n    // console.log(ActionJSX)\r\n    return(\r\n        <div>\r\n            <div className=\"z-depth-4\">\r\n            <table className=\"responsive-table centered bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        {\r\n                                            THead.map((THcontent , index) => {\r\n                                                return(\r\n                                                    <th>{THcontent}</th>\r\n                                                )\r\n                                            })\r\n\r\n                                        }\r\n                                        {/* {\r\n                                            ActionButton.Display == true ? <th>Action</th>:null\r\n                                        } */}\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                    {\r\n                                        \r\n                                        TBody.map((TBodyData , index) => {\r\n                                            var Column = Object.keys(TBodyData).map(function(key) {\r\n                                                return TBodyData[key];\r\n                                              });\r\n                                            //   var hi = Object.keys(ActionButton).map(function(key, i) {\r\n                                            //     // use keyName to get current key's name\r\n                                            //     // and a[keyName] to get its value\r\n                                            //     // console.log(keyName),\r\n                                            //     // console.log(keyIndex)\r\n                                            //     return (\r\n                                            //         <div>\r\n                                            //             <Link \r\n                                            //             to={{pathname :`/operations/country/update`,\r\n                                            //             state: {countryId:Column[0]}\r\n                                            //                 }}><i className=\"material-icons\">edit</i>\r\n                                            //             </Link>\r\n                                            //             <i className=\"material-icons small\">more_vert</i>\r\n                                            //         </div>\r\n                                                    \r\n\r\n                                            //     )\r\n                                            //   })\r\n                                            //   console.log(hi)\r\n                                            return (\r\n                                                <tbody key = {Column[0]} className = {Column[0]}>\r\n                                                <tr >\r\n                                                    <td>{Column[1]}</td>\r\n                                                    <td>{Column[2]}</td>\r\n                                                    \r\n                                                    <td>\r\n                                                        <Link \r\n                                                        to={{pathname :`/operations/country/update`,\r\n                                                        state: {countryId:Column[0]}\r\n                                                            }}><i className=\"material-icons\">edit</i>\r\n                                                        </Link>\r\n                                                        <i className=\"material-icons small\">more_vert</i>\r\n                                                        \r\n                                                        {\r\n                                                            Column[2] == 'Active'?\r\n                                                            <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={()=>this.countryDelete(Column[0])}>check_circle</i>:\r\n                                                            <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={()=>this.countryDelete(Column[0])}>block</i>\r\n                                                        }\r\n\r\n                                                        {/* {\r\n                                                            ActionButton.Edit.Show ?\r\n                                                            <Link \r\n                                                                to={{pathname :ActionButton.Edit.Link, state: {countryId:Column[0]} }}>\r\n                                                                <i className=\"material-icons\">{ActionButton.Edit.Icon}</i>\r\n                                                            </Link>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                        {\r\n                                                          ActionButton.Edit.Show && ActionButton.Edit.Separator ?\r\n                                                          <i className=\"material-icons small\">more_vert</i>\r\n                                                          :\r\n                                                          null  \r\n                                                        } */}\r\n                                                        \r\n                                                        \r\n                                                    </td>\r\n                                                    \r\n                                                        {\r\n                                                          ActionButton.map((TBodyData , index) => {\r\n                                                              \r\n                                                              return(\r\n                                                                  //'opop'\r\n                                                                  <td>\r\n                                                                  <Link to={{pathname :`/operations/country/update`,\r\n                                                        state: {countryId:Column[0]}\r\n                                                            }}> </Link>\r\n                                                                       \r\n                                                                <i className=\"material-icons\">edit</i>\r\n                                                                   \r\n                                                                   </td>\r\n                                                              )\r\n                                                          })  \r\n                                                        }\r\n                                                    \r\n                                                </tr>\r\n                                                </tbody>\r\n                                                );\r\n                                            \r\n                                        })\r\n                                    }\r\n                                </table>\r\n            </div>\r\n        <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}