{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\krishi\\\\app\\\\src\\\\components\\\\operations\\\\masters\\\\country\\\\countryIndex.js\";\nimport React, { Component } from 'react'; //import ReactNotification from \"react-notifications-component\";\n\nimport \"react-notifications-component/dist/theme.css\";\nimport TopNav from '../../../navbar/Topnav';\nimport SideBar from '../../../navbar/SideBar';\nimport { countryModule } from '../../../../services/countryService';\nimport { Link } from 'react-router-dom';\nimport { Notification } from '../../../../utils/Notification';\nimport { Table } from './../../../../utils/Util';\n\nclass Country extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log('in idex2'); //NotificationGenerator(this.notificationDOMRef.current, true, 'success', 'Country Added Successfully')\n    };\n\n    this.paginationHandler = async pageNumber => {\n      console.log(pageNumber);\n      const countryList = await countryModule.getState('', pageNumber, this.state.rowInPage);\n      this.setState({\n        country: countryList,\n        pageNumber: pageNumber\n      });\n    };\n\n    this.state = {\n      country: [],\n      pageNumber: 1,\n      rowInPage: 5\n    };\n    this.paginationHandler = this.paginationHandler.bind(this);\n    this.notificationDOMRef = React.createRef();\n    this.countryDelete = this.countryDelete.bind(this);\n  }\n\n  async componentWillMount() {\n    console.log('in idex'); // if(this.props.location.state.Notification){\n    //     console.log(this.props.location.state.Message)\n    // }\n\n    const countryList = await countryModule.getCountry('', this.state.pageNumber, this.state.rowInPage); // console.log(countryList)\n\n    this.setState({\n      country: countryList\n    });\n  }\n\n  async upDateStatus() {\n    const Test = await countryModule.getCountry();\n    this.setState({\n      country: Test\n    });\n    console.log(Test);\n  }\n\n  async countryDelete(countryId) {\n    const res = await countryModule.deleteCountry(countryId);\n    const countryList2 = await countryModule.getCountry(); //console.log(countryList2)\n    //this.upDateStatus()\n    //this.setState({country:countryList2})\n\n    window.location.reload(); //Notification('Info',\"Country Deleted Successfully \")\n  }\n\n  render() {\n    const pagination = {\n      pageNumber: this.state.pageNumber,\n      entryInPage: 5,\n      handler: this.paginationHandler\n    };\n    const ActionButton = {\n      Edit: {\n        Show: true,\n        ActiveIcon: 'edit',\n        Link: \"/operations/state/update\",\n        StateColumn: 0,\n        StateName: '',\n        Separator: true\n      },\n      Status: {\n        Show: true,\n        Link: '',\n        Icon: 'block',\n        ActiveIcon: 'check_circle',\n        InactiveIcon: 'block',\n        BaseColumn: 6,\n        Toggle: true,\n        HandlingFunction: this.stateDelete,\n        Separator: false\n      }\n    };\n    const countryList = this.state.country; //console.log(countryList)\n\n    if (!Object.keys(countryList).length) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(TopNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(SideBar, {\n        userType: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(TopNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(SideBar, {\n      userType: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s9 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Country List\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"waves-effect waves-light btn red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: \"/operations/country/add\",\n        state: {\n          countryId: \"\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"add\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Table, {\n      THead: ['Name', 'Status'],\n      TBody: this.state.state,\n      ActionButton: ActionButton,\n      Pagination: pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Country;","map":{"version":3,"sources":["D:\\projects\\krishi\\app\\src\\components\\operations\\masters\\country\\countryIndex.js"],"names":["React","Component","TopNav","SideBar","countryModule","Link","Notification","Table","Country","constructor","props","componentDidMount","console","log","paginationHandler","pageNumber","countryList","getState","state","rowInPage","setState","country","bind","notificationDOMRef","createRef","countryDelete","componentWillMount","getCountry","upDateStatus","Test","countryId","res","deleteCountry","countryList2","window","location","reload","render","pagination","entryInPage","handler","ActionButton","Edit","Show","ActiveIcon","StateColumn","StateName","Separator","Status","Icon","InactiveIcon","BaseColumn","Toggle","HandlingFunction","stateDelete","Object","keys","length","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n//import ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport TopNav from '../../../navbar/Topnav';\r\nimport SideBar from '../../../navbar/SideBar';\r\nimport { countryModule } from '../../../../services/countryService'\r\nimport { Link } from 'react-router-dom'\r\nimport { Notification } from '../../../../utils/Notification'\r\nimport { Table } from './../../../../utils/Util'\r\n\r\nclass Country extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            country:[],\r\n            pageNumber:1,\r\n            rowInPage: 5 \r\n        }\r\n        this.paginationHandler = this.paginationHandler.bind(this)\r\n\r\n        this.notificationDOMRef =  React.createRef();\r\n        this.countryDelete =  this.countryDelete.bind(this);\r\n    }\r\n    \r\n    async componentWillMount(){\r\n        console.log('in idex')\r\n        // if(this.props.location.state.Notification){\r\n        //     console.log(this.props.location.state.Message)\r\n        // }\r\n        const countryList = await countryModule.getCountry('', this.state.pageNumber, this.state.rowInPage);\r\n        // console.log(countryList)\r\n        this.setState({country:countryList})\r\n        \r\n        \r\n    }\r\n\r\n    componentDidMount = ()=>{\r\n        console.log('in idex2')\r\n        //NotificationGenerator(this.notificationDOMRef.current, true, 'success', 'Country Added Successfully')\r\n    }\r\n\r\n    async upDateStatus(){\r\n        const Test = await countryModule.getCountry()\r\n        this.setState({country:Test})\r\n        console.log(Test)\r\n    }\r\n    async countryDelete(countryId){\r\n        const res = await countryModule.deleteCountry(countryId)\r\n        \r\n        const countryList2 = await countryModule.getCountry()\r\n        //console.log(countryList2)\r\n        //this.upDateStatus()\r\n        //this.setState({country:countryList2})\r\n        window.location.reload();\r\n        //Notification('Info',\"Country Deleted Successfully \")\r\n    }\r\n\r\n    paginationHandler = async (pageNumber) => {\r\n        console.log(pageNumber);\r\n        const countryList = await countryModule.getState('', pageNumber, this.state.rowInPage)\r\n        this.setState({\r\n            country: countryList,\r\n            pageNumber: pageNumber\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const pagination = {\r\n            pageNumber:this.state.pageNumber,\r\n            entryInPage:5,\r\n            handler: this.paginationHandler\r\n        }\r\n        const ActionButton = {\r\n            Edit:{\r\n                Show: true,\r\n                ActiveIcon:'edit',\r\n                Link:`/operations/state/update`,\r\n                StateColumn:0,\r\n                StateName:'',\r\n                Separator:true\r\n            },\r\n            Status:{\r\n                Show: true,\r\n                Link:'',\r\n                Icon:'block',\r\n                ActiveIcon:'check_circle',\r\n                InactiveIcon:'block',\r\n                BaseColumn:6,\r\n                Toggle:true,\r\n                HandlingFunction:this.stateDelete,\r\n                Separator:false\r\n            }\r\n        }\r\n\r\n        const countryList = this.state.country\r\n        //console.log(countryList)\r\n        if(!Object.keys(countryList).length){\r\n            return (\r\n                <div>\r\n                    {/* <ReactNotification ref={this.notificationDOMRef} /> */}\r\n                    <TopNav/>\r\n                    <SideBar userType={1}/>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n               {/* <ReactNotification ref={this.notificationDOMRef} /> */}\r\n               <TopNav/>\r\n               <SideBar userType={2}/>\r\n                    <div className=\"row\">\r\n                            <div className=\"col s9 offset-s3\">\r\n                                <h5>Country List</h5>\r\n                                <br/>\r\n                                <button className=\"waves-effect waves-light btn red\">\r\n                                    <Link \r\n                                        to={{pathname :`/operations/country/add` ,\r\n                                        state: {countryId:\"\"}\r\n                                            }}> <i className=\"material-icons\">add</i>\r\n                                    </Link>\r\n                                </button>\r\n                                <br/><br/>\r\n                                <Table THead = {['Name', 'Status']} TBody = {this.state.state} ActionButton={ActionButton} Pagination = {pagination}/>\r\n\r\n                                {/* <div className=\"z-depth-4\">\r\n                                <table className=\"responsive-table centered bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Status</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                    {\r\n                                        \r\n                                        countryList.map((country , index) => {\r\n                                            return (\r\n                                                <tbody key = {index} className = {index}>\r\n                                                <tr >\r\n                                                    <td>{country.country_name}</td>\r\n                                                    <td>{country.status}</td>\r\n                                                    <td>\r\n                                                        <Link \r\n                                                        to={{pathname :`/operations/country/update`,\r\n                                                        state: {countryId:country.id}\r\n                                                            }}><i className=\"material-icons\">edit</i>\r\n                                                        </Link>\r\n                                                        <i className=\"material-icons small\">more_vert</i>\r\n                                                        \r\n                                                        {\r\n                                                            country.status == 'Active'?\r\n                                                            <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={()=>this.countryDelete(country.id)}>check_circle</i>:\r\n                                                            <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={()=>this.countryDelete(country.id)}>block</i>\r\n                                                        }\r\n                                                        \r\n                                                        \r\n                                                    </td>\r\n                                                </tr>\r\n                                                </tbody>\r\n                                                );\r\n                                            \r\n                                        })\r\n                                    }\r\n                                </table>\r\n                                </div> */}\r\n                            </div> \r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Country\r\n"]},"metadata":{},"sourceType":"module"}