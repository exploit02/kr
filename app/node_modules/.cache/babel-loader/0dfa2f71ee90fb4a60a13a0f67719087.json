{"ast":null,"code":"var axios = require('axios');\n\nvar ES6Promise = require('es6-promise');\n\nES6Promise.polyfill();\nconst ApiService = {\n  get(apiurl) {\n    return axios.get(apiurl).then(response => {\n      return response.data;\n    }).catch(response => {\n      return response.data;\n    });\n  },\n\n  post(apiurl, bodyFormData) {\n    return axios.post(apiurl, bodyFormData).then(response => {\n      return response;\n    }).catch(err => {\n      const res = {\n        message: err.response.data.message,\n        status: err.response.status\n      };\n      return res;\n    });\n  },\n\n  put(apiurl, bodyFormData) {\n    return axios.put(apiurl, bodyFormData).then(response => {\n      return response;\n    }).catch(err => console.log(err));\n  },\n\n  delete(apiurl, {\n    data: payload\n  }) {\n    console.log('HHHHHHHHHHHHHHHHHHHHHHHHH');\n    console.log(apiurl);\n    console.log(bodyFormData);\n    console.log(data);\n    return axios.delete(apiurl, bodyFormData).then(response => {\n      return response;\n    }).catch(err => console.log(err));\n  }\n\n};\nexport default ApiService;\nexport const countryModule = {\n  getCountry(countryId = '') {\n    return ApiService.get('http://localhost:3001/country/' + countryId);\n  },\n\n  addCountry(country) {\n    return ApiService.post('http://localhost:3001/country/create', country);\n  },\n\n  updateCountry(countryId) {\n    return ApiService.put('http://localhost:3001/country/update', countryId);\n  },\n\n  deleteCountry(countryId) {\n    return ApiService.delete('http://localhost:3001/country/delete', countryId);\n  }\n\n};","map":{"version":3,"sources":["E:\\krishi\\app\\src\\api\\country.js"],"names":["axios","require","ES6Promise","polyfill","ApiService","get","apiurl","then","response","data","catch","post","bodyFormData","err","res","message","status","put","console","log","delete","payload","countryModule","getCountry","countryId","addCountry","country","updateCountry","deleteCountry"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AACAC,UAAU,CAACC,QAAX;AACA,MAAMC,UAAU,GAAG;AACfC,EAAAA,GAAG,CAAEC,MAAF,EAAU;AACX,WAAON,KAAK,CAACK,GAAN,CAAUC,MAAV,EACNC,IADM,CACDC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAHI,EAIJC,KAJI,CAIEF,QAAQ,IAAI;AACf,aAAOA,QAAQ,CAACC,IAAhB;AACH,KANI,CAAP;AAOD,GATc;;AAWfE,EAAAA,IAAI,CAAEL,MAAF,EAASM,YAAT,EAAuB;AACvB,WAAOZ,KAAK,CAACW,IAAN,CAAWL,MAAX,EAAkBM,YAAlB,EACNL,IADM,CACDC,QAAQ,IAAI;AACd,aAAOA,QAAP;AACD,KAHI,EAINE,KAJM,CAIAG,GAAG,IAAI;AACZ,YAAMC,GAAG,GAAG;AACRC,QAAAA,OAAO,EAAGF,GAAG,CAACL,QAAJ,CAAaC,IAAb,CAAkBM,OADpB;AAERC,QAAAA,MAAM,EAAGH,GAAG,CAACL,QAAJ,CAAaQ;AAFd,OAAZ;AAIA,aAAOF,GAAP;AACD,KAVM,CAAP;AAWH,GAvBc;;AAyBfG,EAAAA,GAAG,CAAEX,MAAF,EAASM,YAAT,EAAuB;AACtB,WAAOZ,KAAK,CAACiB,GAAN,CAAUX,MAAV,EAAiBM,YAAjB,EACNL,IADM,CACDC,QAAQ,IAAI;AACd,aAAOA,QAAP;AACD,KAHI,EAINE,KAJM,CAIAG,GAAG,IAAIK,OAAO,CAACC,GAAR,CAAYN,GAAZ,CAJP,CAAP;AAKH,GA/Bc;;AAiCfO,EAAAA,MAAM,CAAEd,MAAF,EAAS;AAAEG,IAAAA,IAAI,EAAEY;AAAR,GAAT,EAA4B;AAC9BH,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,WAAOT,KAAK,CAACoB,MAAN,CAAad,MAAb,EAAoBM,YAApB,EACNL,IADM,CACDC,QAAQ,IAAI;AACd,aAAOA,QAAP;AACD,KAHI,EAINE,KAJM,CAIAG,GAAG,IAAIK,OAAO,CAACC,GAAR,CAAYN,GAAZ,CAJP,CAAP;AAKH;;AA3Cc,CAAnB;AA6CA,eAAeT,UAAf;AAIA,OAAO,MAAMkB,aAAa,GAAG;AAC3BC,EAAAA,UAAU,CAACC,SAAS,GAAG,EAAb,EAAiB;AACzB,WAAOpB,UAAU,CAACC,GAAX,CAAgB,mCAAiCmB,SAAjD,CAAP;AACD,GAH0B;;AAK3BC,EAAAA,UAAU,CAACC,OAAD,EAAU;AAClB,WAAOtB,UAAU,CAACO,IAAX,CAAiB,sCAAjB,EAAwDe,OAAxD,CAAP;AACD,GAP0B;;AAS3BC,EAAAA,aAAa,CAACH,SAAD,EAAW;AACtB,WAAOpB,UAAU,CAACa,GAAX,CAAgB,sCAAhB,EAAuDO,SAAvD,CAAP;AACD,GAX0B;;AAa3BI,EAAAA,aAAa,CAACJ,SAAD,EAAW;AACtB,WAAOpB,UAAU,CAACgB,MAAX,CAAmB,sCAAnB,EAA0DI,SAA1D,CAAP;AACD;;AAf0B,CAAtB","sourcesContent":["var axios = require('axios')\r\nvar ES6Promise = require('es6-promise')\r\nES6Promise.polyfill()\r\nconst ApiService = {\r\n    get( apiurl) {\r\n      return axios.get(apiurl)\r\n      .then(response => {\r\n          return response.data\r\n        })\r\n        .catch(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    post( apiurl,bodyFormData) {\r\n        return axios.post(apiurl,bodyFormData)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => {\r\n          const res = {\r\n              message : err.response.data.message,\r\n              status : err.response.status\r\n          }\r\n          return res;\r\n        })\r\n    },\r\n\r\n    put( apiurl,bodyFormData) {\r\n        return axios.put(apiurl,bodyFormData)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => console.log(err))\r\n    },\r\n\r\n    delete( apiurl,{ data: payload }) {\r\n        console.log('HHHHHHHHHHHHHHHHHHHHHHHHH')\r\n        console.log(apiurl)\r\n        console.log(bodyFormData)\r\n        console.log(data)\r\n        return axios.delete(apiurl,bodyFormData)\r\n        .then(response => {\r\n            return response\r\n          })\r\n        .catch(err => console.log(err))\r\n    }\r\n}\r\nexport default ApiService\r\n\r\n\r\n\r\nexport const countryModule = {\r\n  getCountry(countryId = '') {\r\n    return ApiService.get( 'http://localhost:3001/country/'+countryId)\r\n  },\r\n\r\n  addCountry(country) {\r\n    return ApiService.post( 'http://localhost:3001/country/create',country)\r\n  },\r\n\r\n  updateCountry(countryId){\r\n    return ApiService.put( 'http://localhost:3001/country/update',countryId)\r\n  },\r\n\r\n  deleteCountry(countryId){\r\n    return ApiService.delete( 'http://localhost:3001/country/delete',countryId)\r\n  }\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}