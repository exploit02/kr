{"ast":null,"code":"var _jsxFileName = \"E:\\\\krishi\\\\app\\\\src\\\\components\\\\operations\\\\masters\\\\state\\\\addUpdateState.js\";\nimport React, { Component } from 'react';\nimport Sidebar from '../../../navbar/SideBar';\nimport TopNav from '../../../navbar/Topnav';\nimport { stateModule } from '../../../../services/stateService';\nimport { Notification } from '../../../../utils/Notification';\nimport Validator from '../../../../utils/Validator';\nimport CountryDropDown from './../../../dropDown/countryDropDown';\nimport { MaterializeCSS } from './../../../../utils/Util';\nimport Select from 'react-select';\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\n\nclass AddState extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      state_name: \"\",\n      country_id: \"\",\n      state_code: \"\",\n      status: \"\"\n    };\n    this.notificationDOMRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n    this.stateCreate = this.stateCreate.bind(this);\n    this.stateUpdate = this.stateUpdate.bind(this);\n  }\n\n  async componentWillMount() {\n    if (this.props.location.state.Id) {\n      const stateData = await stateModule.getState(this.props.location.state.Id);\n      console.log(stateData);\n      this.setState({\n        id: stateData[0].id,\n        state_name: stateData[0].state_name,\n        country_id: stateData[0].country_id,\n        state_code: stateData[0].state_code,\n        status: stateData[0].status\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    MaterializeCSS.AutoInit();\n  }\n\n  cHandler(event) {\n    console.log('drop changed');\n    console.log(event.target.name);\n    console.log(event.target.value);\n  }\n\n  async stateCreate(event) {\n    event.preventDefault();\n\n    if (this.state.state_name, this.state.country_id, this.state.state_code) {\n      const res = await stateModule.addState(this.state);\n      this.setState({\n        id: \"\",\n        state_name: \"\",\n        country_id: \"\",\n        state_code: \"\",\n        status: \"\"\n      });\n      this.props.history.push(\"/operations/state\");\n      Notification('Success', \"State Added Successfully \");\n    }\n  }\n\n  async stateUpdate(event) {\n    event.preventDefault();\n\n    if (this.state.state_name, this.state.country_id, this.state.state_code) {\n      const res = await stateModule.updateState(this.state);\n      this.setState({\n        id: \"\",\n        state_name: \"\",\n        country_id: \"\",\n        state_code: \"\",\n        status: \"\"\n      });\n      this.props.history.push({\n        pathname: \"/operations/state\",\n        state: {\n          Notification: true,\n          Type: 'Success',\n          Message: 'State Updated Successfully'\n        }\n      });\n      Notification('Info', \"State Updated Successfully \");\n    }\n  }\n\n  handleChange() {\n    this.setState({\n      state_name: this.refs.state_name.value,\n      country_id: this.refs.country_id.value,\n      state_code: this.refs.state_code.value\n    });\n  }\n\n  logChange(val) {\n    console.log(\"Selected: \" + val);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(TopNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s9 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, !this.props.location.state.Id ? React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Add State\") : React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Update State\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s4 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"form_state_name\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.state_name,\n      onChange: this.handleChange,\n      ref: \"state_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"form_state_name\",\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"State Name\")), React.createElement(\"div\", {\n      className: \"input-field col s4 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"form_country_id\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.country_id,\n      onChange: this.handleChange,\n      ref: \"country_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"form_country_id\",\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Country Name\")), React.createElement(\"div\", {\n      className: \"input-field col s4 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"form_state_code\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.state_code,\n      onChange: this.handleChange,\n      ref: \"state_code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"form_state_code\",\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"State Code\")), React.createElement(\"div\", {\n      className: \"input-field col s4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(CountryDropDown, {\n      Handler: this.cHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-field col s4 offset-s3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: \"\",\n      onChange: this.handleChange,\n      options: options,\n      maxMenuHeight: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row col s3 offset-s4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, !this.props.location.state.Id ? React.createElement(\"button\", {\n      className: \"btn btn-info btn-block btn-sm\",\n      type: \"submit\",\n      onClick: this.stateCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Submit\") : React.createElement(\"button\", {\n      className: \"btn btn-info btn-block btn-sm\",\n      type: \"submit\",\n      onClick: this.stateUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Update\"))))));\n  }\n\n}\n\nexport default AddState;","map":{"version":3,"sources":["E:\\krishi\\app\\src\\components\\operations\\masters\\state\\addUpdateState.js"],"names":["React","Component","Sidebar","TopNav","stateModule","Notification","Validator","CountryDropDown","MaterializeCSS","Select","options","value","label","AddState","constructor","props","state","id","state_name","country_id","state_code","status","notificationDOMRef","createRef","handleChange","bind","stateCreate","stateUpdate","componentWillMount","location","Id","stateData","getState","console","log","setState","componentDidUpdate","AutoInit","cHandler","event","target","name","preventDefault","res","addState","history","push","updateState","pathname","Type","Message","refs","logChange","val","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Sidebar from '../../../navbar/SideBar';\r\nimport TopNav from '../../../navbar/Topnav';\r\nimport {stateModule } from '../../../../services/stateService'\r\nimport {Notification} from '../../../../utils/Notification'\r\nimport Validator from '../../../../utils/Validator';\r\nimport CountryDropDown from './../../../dropDown/countryDropDown'\r\nimport { MaterializeCSS } from './../../../../utils/Util'\r\nimport Select from 'react-select';\r\n \r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' },\r\n];\r\n\r\n\r\n class AddState extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            state_name:\"\",\r\n            country_id:\"\",\r\n            state_code:\"\",\r\n            status:\"\"\r\n        }\r\n        this.notificationDOMRef =  React.createRef();\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.stateCreate = this.stateCreate.bind(this)\r\n        this.stateUpdate = this.stateUpdate.bind(this)\r\n    }\r\n\r\n    async componentWillMount(){\r\n       if(this.props.location.state.Id){\r\n        const stateData = await stateModule.getState(this.props.location.state.Id)\r\n        console.log(stateData)\r\n        this.setState({\r\n            id: stateData[0].id ,\r\n            state_name: stateData[0].state_name ,\r\n            country_id:stateData[0].country_id,\r\n            state_code:stateData[0].state_code,\r\n            status: stateData[0].status\r\n        })\r\n       }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        MaterializeCSS.AutoInit()\r\n    }\r\n\r\n    cHandler(event){\r\n        console.log('drop changed')\r\n        console.log(event.target.name)\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    async stateCreate(event){\r\n        event.preventDefault();\r\n        if(this.state.state_name, this.state.country_id, this.state.state_code){\r\n            const res = await stateModule.addState(this.state)\r\n             this.setState({\r\n                id:\"\",\r\n                state_name:\"\", \r\n                country_id:\"\",\r\n                state_code:\"\",\r\n                status:\"\"\r\n               });\r\n               this.props.history.push(\"/operations/state\");\r\n               Notification('Success',\"State Added Successfully \")\r\n        }\r\n    }\r\n\r\n    async stateUpdate(event){\r\n        event.preventDefault();\r\n        if(this.state.state_name, this.state.country_id, this.state.state_code){\r\n        const res = await stateModule.updateState(this.state)\r\n        this.setState({\r\n            id:\"\",\r\n            state_name:\"\", \r\n            country_id:\"\",\r\n            state_code:\"\",\r\n            status:\"\"\r\n           });\r\n           this.props.history.push({\r\n               pathname: \"/operations/state\",\r\n               state:{\r\n                Notification:true,\r\n                Type:'Success',\r\n                Message: 'State Updated Successfully'\r\n             }\r\n        });\r\n        Notification('Info',\"State Updated Successfully \")\r\n       }\r\n    }\r\n\r\n    handleChange(){\r\n        this.setState({\r\n            state_name: this.refs.state_name.value,\r\n            country_id: this.refs.country_id.value,\r\n            state_code: this.refs.state_code.value\r\n\r\n        })\r\n    }\r\n\r\n    logChange(val) {\r\n        console.log(\"Selected: \" + val);\r\n      }\r\n\r\n    render() {\r\n\r\n      \r\n          \r\n        return (\r\n            <div>\r\n              <TopNav/>\r\n              <Sidebar/>\r\n              <div className =\"row\">\r\n                  <div className=\"col s9 offset-s3\">\r\n                      {\r\n                          !this.props.location.state.Id ? \r\n                          <h5>Add State</h5> :\r\n                          <h5>Update State</h5>\r\n                      }\r\n                    <br/><br/><br/>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s4 offset-s3\">\r\n                            <input id=\"form_state_name\" type=\"text\" className=\"validate\" value={this.state.state_name} onChange={this.handleChange} ref=\"state_name\"/>\r\n                            <label htmlFor=\"form_state_name\" className=\"active\">State Name</label>\r\n                            </div>\r\n                            <div className=\"input-field col s4 offset-s3\">\r\n                            <input id=\"form_country_id\" type=\"text\" className=\"validate\" value={this.state.country_id} onChange={this.handleChange} ref=\"country_id\"/>\r\n                            <label htmlFor=\"form_country_id\" className=\"active\">Country Name</label>\r\n                            </div>\r\n                            <div className=\"input-field col s4 offset-s3\">\r\n                            <input id=\"form_state_code\" type=\"text\" className=\"validate\" value={this.state.state_code} onChange={this.handleChange} ref=\"state_code\"/>\r\n                            <label htmlFor=\"form_state_code\" className=\"active\">State Code</label>\r\n                            </div>\r\n                            <div className=\"input-field col s4\">\r\n                            <CountryDropDown Handler={this.cHandler}/>\r\n                            </div>\r\n                            <div className=\"input-field col s4 offset-s3\">\r\n                            <Select\r\n                                    value=\"\"\r\n                                    onChange={this.handleChange}\r\n                                    options={options}\r\n                                    maxMenuHeight={100}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row col s3 offset-s4\">\r\n                                {\r\n                            !this.props.location.state.Id ?\r\n                            <button className=\"btn btn-info btn-block btn-sm\" type=\"submit\" onClick={this.stateCreate}>Submit</button> :\r\n                            <button className=\"btn btn-info btn-block btn-sm\" type=\"submit\" onClick={this.stateUpdate}>Update</button>\r\n                             }\r\n                    </div>\r\n                    </form>\r\n                  </div>\r\n                </div>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AddState"]},"metadata":{},"sourceType":"module"}