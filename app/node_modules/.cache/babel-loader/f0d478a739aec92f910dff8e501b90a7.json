{"ast":null,"code":"import { NotificationManager } from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n/*alertmesage.createNotification(status,\"Message\")----->Call this function in your message*/\n\nexport const alertmesage = {\n  createNotification(status, message) {\n    switch (status) {\n      case 200:\n        console.log('djdjdjdjdjdj');\n        return NotificationManager.info(message);\n\n      case 201:\n        return NotificationManager.success(message);\n\n      case 400:\n        return NotificationManager.warning(message);\n\n      case 500:\n        return NotificationManager.error(message, 5000, () => {\n          alert('callback');\n        });\n\n      default:\n        return NotificationManager.info(message);\n    }\n  }\n\n};","map":{"version":3,"sources":["E:\\krishi\\app\\src\\components\\notification\\Info.js"],"names":["NotificationManager","alertmesage","createNotification","status","message","console","log","info","success","warning","error","alert"],"mappings":"AAAA,SAAQA,mBAAR,QAAkC,qBAAlC;AACA,OAAO,2CAAP;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,kBAAkB,CAAEC,MAAF,EAASC,OAAT,EAAiB;AAC/B,YAAQD,MAAR;AACE,WAAK,GAAL;AACIE,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,eAAON,mBAAmB,CAACO,IAApB,CAAyBH,OAAzB,CAAP;;AACH,WAAK,GAAL;AACE,eAAOJ,mBAAmB,CAACQ,OAApB,CAA4BJ,OAA5B,CAAP;;AAEF,WAAK,GAAL;AACG,eAAOJ,mBAAmB,CAACS,OAApB,CAA4BL,OAA5B,CAAP;;AAEH,WAAK,GAAL;AACE,eAAOJ,mBAAmB,CAACU,KAApB,CAA0BN,OAA1B,EAAmC,IAAnC,EAAyC,MAAM;AACpDO,UAAAA,KAAK,CAAC,UAAD,CAAL;AACD,SAFM,CAAP;;AAGD;AACC,eAAOX,mBAAmB,CAACO,IAApB,CAAyBH,OAAzB,CAAP;AAfJ;AAiBH;;AAnBsB,CAApB","sourcesContent":["import {NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n/*alertmesage.createNotification(status,\"Message\")----->Call this function in your message*/\r\nexport const alertmesage = {\r\n    createNotification (status,message){\r\n        switch (status) {\r\n          case 200:\r\n              console.log('djdjdjdjdjdj')\r\n             return NotificationManager.info(message);\r\n          case 201:\r\n            return NotificationManager.success(message);\r\n         \r\n          case 400:\r\n             return NotificationManager.warning(message);\r\n           \r\n          case 500:\r\n            return NotificationManager.error(message, 5000, () => {\r\n              alert('callback');\r\n            });\r\n           default: \r\n            return NotificationManager.info(message);\r\n      }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}