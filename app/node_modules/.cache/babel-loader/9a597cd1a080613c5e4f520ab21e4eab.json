{"ast":null,"code":"var _jsxFileName = \"E:\\\\krishi\\\\app\\\\src\\\\utils\\\\Table.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport const Table = ({\n  THead,\n  TBody,\n  ActionButton = {}\n}) => {\n  const THeadLength = THead.length + 2;\n  const rowInPage = 10;\n\n  if (TBody[0]['count']) {\n    console.log(TBody[0].count);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    class: \"pagination\",\n    style: {\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    class: \"disabled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"chevron_left\"))), React.createElement(\"li\", {\n    class: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"1\")), React.createElement(\"li\", {\n    class: \"waves-effect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"2\")), React.createElement(\"li\", {\n    class: \"waves-effect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"3\")), React.createElement(\"li\", {\n    class: \"waves-effect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"4\")), React.createElement(\"li\", {\n    class: \"waves-effect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"5\")), React.createElement(\"li\", {\n    class: \"waves-effect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"chevron_right\")))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"z-depth-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"responsive-table centered bordered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, THead.map((THcontent, index) => {\n    return React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, THcontent);\n  }), Object.keys(ActionButton).length !== 0 ? React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Action\") : null)), TBody.map((TBodyData, index) => {\n    var Column = Object.keys(TBodyData).map(function (key) {\n      return TBodyData[key];\n    });\n    let adjustColumnWithHead = Column.slice(2, THeadLength).map(data => data);\n    return React.createElement(\"tbody\", {\n      key: index,\n      className: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, adjustColumnWithHead.map((ColumnData, index) => {\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, ColumnData);\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, Object.keys(ActionButton).map(Button => {\n      const ButtonProperty = ActionButton[Button];\n      let ButtonHTML;\n\n      if (ButtonProperty.Show && ButtonProperty.Link !== undefined && ButtonProperty.Link !== '') {\n        ButtonHTML = React.createElement(Link, {\n          to: {\n            pathname: ButtonProperty.Link,\n            state: {\n              countryId: Column[ButtonProperty.StateColumn]\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, ButtonProperty.ActiveIcon));\n      } else if (ButtonProperty.Show && ButtonProperty.Toggle === true) {\n        ButtonHTML = Column[ButtonProperty.BaseColumn] ? React.createElement(\"i\", {\n          className: \"material-icons\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => ButtonProperty.HandlingFunction(Column[0]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, ButtonProperty.ActiveIcon) : React.createElement(\"i\", {\n          className: \"material-icons\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => ButtonProperty.HandlingFunction(Column[0]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, ButtonProperty.InactiveIcon);\n      } else if (ButtonProperty.Show) {\n        ButtonHTML = Column[ButtonProperty.BaseColumn] ? React.createElement(\"i\", {\n          className: \"material-icons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, ButtonProperty.ActiveIcon) : React.createElement(\"i\", {\n          className: \"material-icons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, ButtonProperty.InactiveIcon);\n      }\n\n      return React.createElement(React.Fragment, null, ButtonHTML, ButtonProperty.Separator ? React.createElement(\"i\", {\n        className: \"material-icons small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"more_vert\") : null);\n    }))));\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["E:\\krishi\\app\\src\\utils\\Table.js"],"names":["React","Link","Table","THead","TBody","ActionButton","THeadLength","length","rowInPage","console","log","count","float","map","THcontent","index","Object","keys","TBodyData","Column","key","adjustColumnWithHead","slice","data","ColumnData","Button","ButtonProperty","ButtonHTML","Show","undefined","pathname","state","countryId","StateColumn","ActiveIcon","Toggle","BaseColumn","cursor","HandlingFunction","InactiveIcon","Separator"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const Table = ({THead, TBody, ActionButton={} })=>{\r\n    const THeadLength = THead.length + 2;\r\n    const rowInPage = 10\r\n    if(TBody[0]['count']){\r\n        console.log(TBody[0].count)\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            \r\n                <ul class=\"pagination\" style={{float: 'right'}}>\r\n                    <li class=\"disabled\"><a href=\"#!\"><i class=\"material-icons\">chevron_left</i></a></li>\r\n                    <li class=\"active\"><a href=\"#!\">1</a></li>\r\n                    <li class=\"waves-effect\"><a href=\"#!\">2</a></li>\r\n                    <li class=\"waves-effect\"><a href=\"#!\">3</a></li>\r\n                    <li class=\"waves-effect\"><a href=\"#!\">4</a></li>\r\n                    <li class=\"waves-effect\"><a href=\"#!\">5</a></li>\r\n                    <li class=\"waves-effect\"><a href=\"#!\"><i class=\"material-icons\">chevron_right</i></a></li>\r\n                </ul>\r\n            <br/><br/>\r\n            <div className=\"z-depth-4\">\r\n            <table className=\"responsive-table centered bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        {\r\n                                            THead.map((THcontent , index) => {\r\n                                                return(\r\n                                                    <th>{THcontent}</th>\r\n                                                )\r\n                                            })\r\n\r\n                                        }\r\n                                        {\r\n                                            Object.keys(ActionButton).length !== 0 ? <th>Action</th>:null\r\n                                        } \r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                    {\r\n                                        \r\n                                        TBody.map((TBodyData , index) => {\r\n                                            var Column = Object.keys(TBodyData).map(function(key) {\r\n                                                return TBodyData[key];\r\n                                            });\r\n\r\n                                            let adjustColumnWithHead = Column.slice(2, THeadLength).map(\r\n                                                (data) => data\r\n                                              )\r\n\r\n\r\n                                            return (\r\n                                                <tbody key = {index} className = {index}>\r\n                                                <tr >\r\n                                                    {\r\n                                                        adjustColumnWithHead.map((ColumnData , index) => {\r\n                                                            return(\r\n                                                                <td>{ColumnData}</td>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                    <td>\r\n                                                        {\r\n                                                          Object.keys(ActionButton).map((Button) => {\r\n                                                              const ButtonProperty = ActionButton[Button];\r\n                                                              let ButtonHTML\r\n                                                              if(ButtonProperty.Show && ButtonProperty.Link !== undefined && ButtonProperty.Link !== ''){\r\n                                                                  \r\n                                                                    ButtonHTML = \r\n                                                                        <Link \r\n                                                                            to={{pathname :ButtonProperty.Link,\r\n                                                                            state: {countryId:Column[ButtonProperty.StateColumn]}\r\n                                                                            }}\r\n                                                                            ><i className=\"material-icons\">{ButtonProperty.ActiveIcon}</i>\r\n                                                                        </Link>\r\n                                                                        \r\n                                                                \r\n                                                              }else if(ButtonProperty.Show && ButtonProperty.Toggle === true){\r\n                                                                ButtonHTML = \r\n                                                                    Column[ButtonProperty.BaseColumn] ? \r\n                                                                    <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={()=>ButtonProperty.HandlingFunction(Column[0])}>{ButtonProperty.ActiveIcon}</i>\r\n                                                                    :\r\n                                                                    <i className=\"material-icons\" style={{cursor:'pointer'}} onClick={()=>ButtonProperty.HandlingFunction(Column[0])}>{ButtonProperty.InactiveIcon}</i>;\r\n                                                                        \r\n                                                              }else if(ButtonProperty.Show){\r\n                                                                ButtonHTML = \r\n                                                                    Column[ButtonProperty.BaseColumn] ? \r\n                                                                    <i className=\"material-icons\">{ButtonProperty.ActiveIcon}</i>\r\n                                                                    :\r\n                                                                    <i className=\"material-icons\">{ButtonProperty.InactiveIcon}</i>\r\n                                                              }\r\n                                                              return(\r\n                                                                  < >\r\n                                                                   {ButtonHTML}\r\n                                                                   {\r\n                                                                       ButtonProperty.Separator ? \r\n                                                                       <i className=\"material-icons small\">more_vert</i>\r\n                                                                       :\r\n                                                                       null\r\n                                                                   }\r\n                                                                   </>\r\n                                                              )\r\n                                                          })  \r\n                                                        }\r\n                                                        </td>\r\n                                                    \r\n                                                </tr>\r\n                                                </tbody>\r\n                                                );\r\n                                            \r\n                                        })\r\n                                    }\r\n                                </table>\r\n            </div>\r\n        <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}