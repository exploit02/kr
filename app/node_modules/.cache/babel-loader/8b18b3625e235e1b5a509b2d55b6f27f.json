{"ast":null,"code":"import _objectWithoutProperties from \"E:\\\\krishi\\\\app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\krishi\\\\app\\\\src\\\\utils\\\\privateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport session from './../utils/sessionStore';\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => session.isLoggedIn ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/login'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["E:\\krishi\\app\\src\\utils\\privateRoute.js"],"names":["React","Redirect","Route","session","PrivateRoute","Component","component","rest","props","isLoggedIn","pathname"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,YAAY,GAAG,UAAqC;AAAA,MAAvBC,SAAuB,QAAlCC,SAAkC;AAAA,MAATC,IAAS;;AAEtD,SACI,oBAAC,KAAD,oBACQA,IADR;AAEQ,IAAA,MAAM,EAAIC,KAAK,IAAIL,OAAO,CAACM,UAAR,GAAsB,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAtB,GAAkD,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CARD;;AAUA,eAAeN,YAAf","sourcesContent":["import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport session from './../utils/sessionStore'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest })=>{\r\n    \r\n    return(\r\n        <Route \r\n            {...rest}\r\n                render = {props => session.isLoggedIn ? (<Component {...props}/>) : (<Redirect to={{ pathname: '/login'}}/>)}/>\r\n    )\r\n\r\n}\r\n\r\nexport default PrivateRoute\r\n"]},"metadata":{},"sourceType":"module"}